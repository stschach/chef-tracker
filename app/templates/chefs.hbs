<div class="flex-container">
  <div class="flex-item">
    <h1>Chef Tracker</h1>
    <p>
      Is your favorite {{chefTypes}} cooking right now?
      <br>
      <br>
      Find out with <strong>Chef Tracker</strong>,
      the hottest new {{chefTypes}}-tracking app on the market.
    </p>
    <hr>
      A chef? Pah! Here, we say {{input value=chefTypes}}
    <hr>
      <p>
        {{chefsCooking.length}} of our
        {{totalChefs}} chefs are cooking right now!
      </p>
      <p>Our {{totalChefs}} chefs teach {{totalStudents}} students.</p>
    <ul>
      {{#each model as |chef|}}
        {{#collapsible-component as |isOpen component|}}
          <div class="chef-card {{if chef.isCooking '' 'not-here'}}">
            <div {{action 'toggleOpen' target=component}} class="title-bar">
              {{chef.name}}
              <span class="pull-right">{{if isOpen 'V' '>'}}</span>
            </div>
            {{#if isOpen}}
              {{icon-image chef.imageUrl left=true}}
              <div class="bio">{{chef.bio}}</div>
              <div class="students">
                Number of students:
                <button {{action 'removeStudent' chef}}>-</button>
                {{chef.students}}
                <button {{action 'addStudent' chef}}>+</button>
              </div>
              <br>
              <div class="button-row">
                {{#link-to 'chefs.chef' chef.id}}
                  <button>Bio</button>
                {{/link-to}}
                {{#link-to 'chefs.chef.edit' chef.id}}
                  <button>Edit</button>
                {{/link-to}}
                <button {{action 'togglePresence' chef}}>
                  {{if chef.isCooking 'Exit' 'Enter'}}
                </button>
              </div>
            {{/if}}
          </div>
        {{/collapsible-component}}
      {{/each}}
    </ul>
    <hr>
    {{input value=newChef}}
    <button {{action 'saveChef'}}>Hire Chef</button>
  </div>
  <div class="flex-item">
    {{outlet}}
  </div>
</div>

<!--
  Helpful html tips:
  - 'div' creates a new element on a new line.
  - 'span' creates a new element on the same line.
  - including 'chef' in the action helper so the action knows which chef
    to work with in the model that is looping through all of them.
  - a 'class' is simply an id to tie html elements to certain css styling
  - {{!-- this is a handlebars comment --}}
-->
